[includeIf "gitdir:~/Projects/atlassian/"]
	path = ~/Projects/atlassian/.gitconfig
[includeIf "gitdir:~/Projects/github/"]
	path = ~/Projects/github/.gitconfig
[push]
	default = simple
	autoSetupRemote = true
[remote]
	pushDefault = origin
[core]
	editor = vim
	pager = delta
	excludesfile = /Users/mdejongh/.gitignore_global
	# Performance optimizations for large repositories
	fsmonitor = true
	untrackedcache = true
	commitgraph = true
	multipackindex = true
	# sparseCheckoutCone = true  # Disabled for libgit2 compatibility
[init]
	defaultBranch = main
# [filter "lfs"]
#	clean = git-lfs clean -- %f
#	smudge = git-lfs smudge -- %f
#	process = git-lfs filter-process
#	required = true
# Git LFS disabled - use 'git lfs install' to re-enable if needed
# For on-demand LFS: git config lfs.fetchinclude "path/to/needed/files"
[alias]
	merge-commits = "!funct() { git log --merges --reverse --oneline --ancestry-path $1..origin | grep \"Merged pull request\";  }; funct"
	pr-number = "!funct() { git merge-commits $1 | head -n1 | sed -n \"s/^.*Merged pull request #\\\\s*\\\\([0-9]*\\\\).*$/\\\\1/p\"; }; funct"
	web-url = "!funct() { git config remote.origin.url | sed -e\"s/git@/https:\\/\\//\" -e\"s/\\.git$//\" | sed -E \"s/(\\/\\/[^:]*):/\\1\\//\"; }; funct"
	pr = "!funct() { open \"`git web-url`/pull-requests/`git pr-number $1`\" ;}; funct"
	conflicted = diff --name-only --diff-filter=U --relative
	root = rev-parse --show-toplevel
	find-hash = "!f() { git log --grep=\"$1\" -n 1 --format=%H; }; f"
	files = "!git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")"
	stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")
	depgraph = !git madge image --webpack-config webpack.config.js --basedir . --style solarized-dark src
	heatmap = "!f() { git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")...HEAD | grep -v -E \"\\\\.(json|lock)$\" | sort | uniq -c | sort -nr | head -n 25; }; f"
	wt = "!f() { cd $(git worktree list | fzf | awk \"{print \\$1}\") && exec $SHELL; }; f"
	gWs = "!f() { cd $(git worktree list | fzf | awk \"{print \\$1}\") && exec $SHELL; }; f"
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true
	dark = true
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = 11
	frag = magenta bold
	func = 146 bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[fetch]
	prune = true
	pruneTags = true
	all = false
[gui]
	pruneDuringFetch = true
[user]
	email = mdejongh@atlassian.com
	name = Marco de Jongh
	signingkey = F810F052CAEE17602D4A53D327D29FFED3644076
[trace2]
	eventTarget = af_unix:/Users/mdejongh/.gittrace/trace.sock
	eventBrief = true
	eventNesting = 1
	configparams = custom.metacommands
[credential "http://localhost:7990"]
	provider = generic
[http]
	useragent = bb-cli/0.4.0
[rerere]
	enabled = true
	autoupdate = true
[rebase]
	autosquash = true
	autoStash = true
	updateRefs = true
[merge]
	conflictstyle = zdiff3
[pull]
	rebase = true
[diff]
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
	algorithm = histogram
[help]
	autocorrect = prompt
[commit]
	verbose = true
[feature]
	# Enable all performance features for large repositories
	manyFiles = true
[gc]
	# Better garbage collection for large repos
	cruftPacks = true
[pack]
	# Speed up object counting and packfile operations
	useBitmaps = true
	writeReverseIndex = true
[index]
	# Skip SHA verification for index (safe on SSDs) - disabled for libgit2 compatibility
	# skipHash = true
[fetch]
	# Update commit graph on fetch
	writeCommitGraph = true
[maintenance]
	repo = /Users/mdejongh/Projects/atlassian/afm-shallow/.bare
	repo = /Users/mdejongh/Projects/atlassian/afm/afm-bin-autoswitching
	repo = /Users/mdejongh/Projects/atlassian/afm/isl
	repo = /Users/mdejongh/Projects/atlassian/afm/master
	repo = /Users/mdejongh/Projects/atlassian/spr_rebase_fix
	repo = /Users/mdejongh/Projects/atlassian/afm/add-spr-commit-amend
	repo = /Users/mdejongh/Projects/atlassian/afm/afm-install
